generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "extendedWhereUnique"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  admin         Boolean   @default(false)

  accounts Account[]
  sessions Session[]
  Styles   Styles[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Styles {
  id        String   @id @default(cuid())
  content   String   @default("nowy edytor")
  styles    Json     @default("{}")
  public    Boolean  @default(true)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}
